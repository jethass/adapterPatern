Chaîne de responsabilité avec un manager:
-------------------------------------------------------------------------------------------------------------------
abstract class Filter
{       
        abstract public function execute(array $toFilter);
}

class RemoveMultipleOf3 extends Filter
{
        public function execute(array $toFilter)
        {
                /* Par exemple : 9 % 3 = 0, 
                 * la callback retourne false, l'élément est supprimé du tableau
                 */
                return array_filter($toFilter, function($entry){ return (bool)($entry % 3);}); 
        }
}

class RemoveMultipleOf4 extends Filter
{
        public function execute(array $toFilter)
        {
                return array_filter($toFilter, function($entry){ return (bool)($entry % 4);}); 
        }
}

class FilterManager
{
        protected $filters = array();
        
        public function addFilter(Filter $filter)
        {
                $this->filters[] = $filter;
                
                return $this;
        }
        
        public function execute(array $toFilter)
        {
                foreach($this->filters AS $filter)
                {
                        $toFilter = $filter->execute($toFilter);
                }
                
                return $toFilter;
        }
}

$filterManager = new FilterManager();

$filterManager->addFilter(new RemoveMultipleOf3())
                ->addFilter(new RemoveMultipleOf4());
                        
$filtered = $filterManager->execute(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13));

print_r($filtered);

/* Sortie :
 * Array
 * (
 *     [0] => 1
 *     [1] => 2
 *     [4] => 5
 *     [6] => 7
 *     [9] => 10
 *     [10] => 11
  *    [12] => 13
  * )
 */
